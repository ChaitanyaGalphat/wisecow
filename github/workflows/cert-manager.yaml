apiVersion: v1
kind: Namespace
metadata:
  name: cert-manager
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cert-manager
  namespace: cert-manager
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cert-manager-cainjector
  namespace: cert-manager
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cert-manager-webhook
  namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cert-manager
  labels:
    app: cert-manager
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["cert-manager.io"]
    resources: ["issuers", "clusterissuers"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["acme.cert-manager.io"]
    resources: ["challenges", "orders"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cert-manager-edit
  labels:
    app: cert-manager
rules:
  - apiGroups: ["cert-manager.io", "acme.cert-manager.io"]
    resources: ["*"]
    verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cert-manager
  labels:
    app: cert-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cert-manager
subjects:
  - kind: ServiceAccount
    name: cert-manager
    namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cert-manager:leaderelection
  namespace: cert-manager
  labels:
    app: cert-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cert-manager:leaderelection
subjects:
  - kind: ServiceAccount
    name: cert-manager
    namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cert-manager-webhook:dynamic-serving
  namespace: cert-manager
  labels:
    app: cert-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cert-manager-webhook:dynamic-serving
subjects:
  - kind: ServiceAccount
    name: cert-manager-webhook
    namespace: cert-manager
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: certificates.cert-manager.io
  labels:
    app: cert-manager
spec:
  group: cert-manager.io
  names:
    kind: Certificate
    listKind: CertificateList
    plural: certificates
    singular: certificate
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Issuer of the certificate
          jsonPath: .spec.issuerRef.name
          name: Issuer
          type: string
        - description: Status of the certificate
          jsonPath: .status.conditions[-1].reason
          name: Status
          type: string
        - description: The expiration date of the certificate
          jsonPath: .status.notAfter
          name: Expiry
          type: date
      name: v1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: 'Desired state of the Certificate resource.'
              properties:
                commonName:
                  type: string
                dnsNames:
                  items:
                    type: string
                  type: array
                duration:
                  type: string
                ipAddresses:
                  items:
                    type: string
                  type: array
                isCA:
                  type: boolean
                issuerRef:
                  properties:
                    group:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                  required:
                    - name
                  type: object
                keystores:
                  properties:
                    jks:
                      properties:
                        create:
                          type: boolean
                        passwordSecretRef:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          required:
                            - name
                          type: object
                      required:
                        - create
                      type: object
                    pkcs12:
                      properties:
                        create:
                          type: boolean
                        passwordSecretRef:
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                          required:
                            - name
                          type: object
                      required:
                        - create
                      type: object
                  type: object
                literalSubject:
                  type: string
                organization:
                  items:
                    type: string
                  type: array
                privateKey:
                  properties:
                    algorithm:
                      type: string
                    encoding:
                      type: string
                    rotationPolicy:
                      type: string
                    size:
                      format: int32
                      type: integer
                  type: object
                renewBefore:
                  type: string
                secretName:
                  type: string
                subject:
                  properties:
                    countries:
                      items:
                        type: string
                      type: array
                    localities:
                      items:
                        type: string
                      type: array
                    organizationalUnits:
                      items:
                        type: string
                      type: array
                    postalCodes:
                      items:
                        type: string
                      type: array
                    provinces:
                      items:
                        type: string
                      type: array
                    streetAddresses:
                      items:
                        type: string
                      type: array
                  type: object
                uris:
                  items:
                    type: string
                  type: array
              required:
                - issuerRef
                - secretName
              type: object
            status:
              description: 'Observed state of the Certificate resource.'
              properties:
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
                notAfter:
                  format: date-time
                  type: string
                notBefore:
                  format: date-time
                  type: string
                renewalTime:
                  format: date-time
                  type: string
              type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    email: your-email@example.com
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx
